{"version":3,"sources":["api/index.js","components/SelectElement.jsx","components/LoadingPoints.jsx","components/OverlayDesks.jsx","components/DateRangeSelect.jsx","pages/MainApp.jsx","assets/office.jpeg","pages/MobileApp.jsx","pages/DesktopApp.jsx","app/index.js","index.js"],"names":["api","axios","create","baseURL","getAllEmployees","a","get","then","response","data","StyledSelect","styled","Select","displayName","StyledContainer","div","SelectElement","handleChange","selectedOption","props","handleUserChange","this","selectOptions","className","classNamePrefix","value","onChange","options","isClearable","isSearchable","React","Component","StyledLoading","span","LoadingPoints","StyledOverlay","StyledTextOverlay","now","Date","DateRangeSelect","startDate","endDate","setDateRange","useState","key","state","setState","useEffect","editableDateInputs","showSelectionPreview","item","range","selection","callBack","moveRangeOnFirstSelection","months","minDate","ranges","locale","locales","dateDisplayFormat","Modal","setAppElement","StyledSelectors","StyledModal","MainApp","getEmployees","res","users","map","user","_id","label","firstname","surname","loading","catch","err","NotificationManager","error","fatalError","startDatePeriod","endDatePeriod","isPermanent","selectedUser","showModal","showCalendar","bind","toggleCalendar","getPeriodText","clearDates","refContainer","createRef","prevProps","prevState","Math","ceil","abs","toLocaleDateString","Fragment","isPermanentPeriod","modified","onClick","disabled","isOpen","contentLabel","style","overlay","zIndex","StyledImg","StyledClickPointsContainer","DesktopApp","showGround","showFirst","switchFloor","src","office","alt","StyledHeader","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ce554b8.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst api = axios.create({\n    baseURL: 'http://localhost:3000/api',\n})\n\nexport const getAllEmployees = async () => {\n    return await api.get('/employees').then(response => response.data);\n}\n\nexport const getEmployeeById = async (id) => {\n    return await api.get(`/employee/${id}`).then(response => response.data);\n}\n\nconst apis = {\n    getAllEmployees,\n    getEmployeeById\n}\n\nexport default apis","import React from 'react';\r\nimport Select from 'react-select';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledSelect = styled(Select)`\r\n  z-index: 2;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nStyledSelect.displayName = 'StyledSelect'\r\n\r\nconst StyledContainer = styled.div`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nStyledContainer.displayName = 'StyledContainer'\r\n\r\nclass SelectElement extends React.Component {\r\n    handleChange = selectedOption => {\r\n        this.props.handleUserChange(selectedOption)\r\n    };\r\n    render() {\r\n        const {selectOptions, selectedOption} = this.props\r\n        return (\r\n            <StyledContainer>\r\n                <h4 className=\"text-info\">Please choose your name from the list:</h4>\r\n                <StyledSelect\r\n                    className={'basic-single'}\r\n                    classNamePrefix='select'\r\n                    value={selectedOption}\r\n                    onChange={this.handleChange}\r\n                    options={selectOptions}\r\n                    isClearable={true}\r\n                    isSearchable={true}\r\n                />\r\n                {selectedOption === null &&\r\n                <h4 className='small text-danger'>The Open Calendar button will be enabled once you select your name.</h4>\r\n                }\r\n            </StyledContainer>\r\n        );\r\n    };\r\n};\r\n\r\nexport default SelectElement;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledLoading = styled.span`\r\n    position: absolute;\r\n    \r\n    .dot-flashing {\r\n        position: relative;\r\n        width: 20px;\r\n        height: 20px;\r\n        border-radius: 10px;\r\n        background-color: #a4b3d6;\r\n        color: #a4b3d6;\r\n        animation: dotFlashing 1s infinite linear alternate;\r\n        animation-delay: 1s;\r\n    }\r\n    \r\n    .dot-flashing::before, .dot-flashing::after {\r\n        content: '';\r\n        display: inline-block;\r\n        position: absolute;\r\n        top: 0;\r\n    }\r\n    \r\n    .dot-flashing::before {\r\n        left: -80px;\r\n        width: 20px;\r\n        height: 20px;\r\n        border-radius: 10px;\r\n        background-color: #a4b3d6;\r\n        color: #a4b3d6;\r\n        animation: dotFlashing 1s infinite alternate;\r\n        animation-delay: .5s;\r\n    }\r\n    \r\n    .dot-flashing::after {\r\n        left: 80px;\r\n        width: 20px;\r\n        height: 20px;\r\n        border-radius: 10px;\r\n        background-color: #a4b3d6;\r\n        color: #a4b3d6;\r\n        animation: dotFlashing 1s infinite alternate;\r\n        animation-delay: 1.5s;\r\n    }\r\n\r\n    @keyframes dotFlashing {\r\n        0% {\r\n            background-color: #a4b3d6;\r\n        }\r\n        50%,\r\n        100% {\r\n            background-color: rgba(0,0,0,0.5);\r\n            width: 15px;\r\n            height: 15px;\r\n        }\r\n    }\r\n`;\r\n\r\nStyledLoading.displayName = 'StyledLoading'\r\n\r\nexport const LoadingPoints = () => {\r\n    return (\r\n        <StyledLoading>\r\n            <p className=\"dot-flashing\"/>\r\n        </StyledLoading>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { LoadingPoints } from \"./LoadingPoints\"\r\n\r\nconst StyledOverlay = styled.div`\r\n    position: absolute;\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: rgba(0,0,0,0.5);\r\n    z-index: 2;\r\n    cursor: pointer;\r\n`;\r\nStyledOverlay.displayName = 'StyledOverlay'\r\n\r\nconst StyledTextOverlay = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    font-size: 50px;\r\n    color: white;\r\n    transform: translate(-50%,-50%);\r\n    -ms-transform: translate(-50%,-50%);\r\n    text-align: center;\r\n`;\r\nStyledTextOverlay.displayName = 'StyledTextOverlay'\r\n\r\nclass OverlayDesks extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.loadingDesks &&\r\n                    <StyledOverlay>\r\n                        <StyledTextOverlay>\r\n                            <h1>Please wait, loading desks</h1>\r\n                            <LoadingPoints />\r\n                        </StyledTextOverlay>\r\n                    </StyledOverlay>\r\n                }\r\n                {this.props.notUserSelected && !this.props.loadingDesks &&\r\n                    <StyledOverlay>\r\n                        <StyledTextOverlay>Please choose an user in order to proceed.</StyledTextOverlay>\r\n                    </StyledOverlay>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OverlayDesks\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport * as locales from 'react-date-range/dist/locale';\r\nimport { DateRange } from 'react-date-range'\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledContainer = styled.div`\r\n    margin-top: 20px;\r\n    display: block;\r\n    margin-bottom: 20px;\r\n    \r\n    .rdrCalendarWrapper {\r\n        font-size: 100%;\r\n        width: 100%;\r\n    }\r\n    .rdrMonth {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n    .rdrDay {\r\n        height: 4em;\r\n    }\r\n    .rdrDateInput, .rdrMonthAndYearPickers, .rdrWeekDays, .rdrDayNumber {\r\n        font-size: 20px;\r\n    }\r\n    .rdrDays {\r\n        height: 100%;\r\n    }\r\n    \r\n    @media (max-width: 1199px) {\r\n        .rdrDay {\r\n            height: 3em;\r\n        }\r\n        .rdrDateInput, .rdrMonthAndYearPickers, .rdrWeekDays, .rdrDayNumber {\r\n            font-size: 15px;\r\n        }\r\n    }\r\n`;\r\n\r\nStyledContainer.displayName = 'StyledContainer'\r\n\r\nconst now = new Date()\r\nexport const DateRangeSelect = (props) => {\r\n    let {startDate, endDate, setDateRange} = props\r\n    const [state, setState] = useState([\r\n        {\r\n            startDate: now,\r\n            endDate: now,\r\n            key: 'selection'\r\n        }\r\n    ])\r\n\r\n    useEffect(() => {\r\n        setState([\r\n            {\r\n                startDate: startDate,\r\n                endDate: endDate,\r\n                key: 'selection'\r\n            }\r\n        ]);\r\n    }, [startDate, endDate])\r\n\r\n    const onChange = range => {\r\n        setState(range)\r\n        setDateRange(range[0].startDate, range[0].endDate)\r\n        props.callBack && props.callBack()\r\n    }\r\n\r\n    return (\r\n        <StyledContainer>\r\n            <DateRange\r\n                editableDateInputs={true}\r\n                showSelectionPreview={true}\r\n                onChange={item => onChange([item.selection])}\r\n                moveRangeOnFirstSelection={false}\r\n                months={1}\r\n                minDate={now}\r\n                ranges={state}\r\n                locale={locales['de']}\r\n                dateDisplayFormat={'dd.MM.yyyy'}\r\n            />\r\n        </StyledContainer>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\nimport * as api from \"../api\";\n\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\n\nimport styled from 'styled-components'\nimport Modal from 'react-modal';\nimport { DesktopApp } from './index'\n\nimport { SelectElement } from '../components'\nimport { DateRangeSelect } from '../components/DateRangeSelect'\n\nModal.setAppElement('#root')\n\nconst StyledDate = styled.div`\n    margin-top: 7%;\n    padding: 0;\n`;\nStyledDate.displayName = 'StyledDate'\n\nconst StyledSelectors = styled.div`\n    padding: 1% 2% 0 1%;\n    @media (max-width: 991px) {\n        padding: 3% 10%;\n    }\n`;\nStyledSelectors.displayName = 'StyledSelectors'\n\nconst StyledContainer = styled.div`\n    padding: 70px;\n    background-color: #F8FAB7;\n    @media (max-width: 991px) {\n        display: flex;\n        flex-direction: column-reverse;\n    }\n    .plans-cls {\n        border-right: 3px solid #293FCA;\n        display: inline-flex;\n        @media (max-width: 991px) {\n            border-right: none;\n            border-top: 3px solid #293FCA;\n        }\n    }\n`;\nStyledContainer.displayName = 'StyledContainer'\n\nconst StyledModal = styled(Modal)`\n    color: black;\n    width: 40%;\n    margin: 1% auto;\n    background-color: white;\n    border: 1px solid #a4b3d6;\n    padding: 2%;\n\n    @media (max-width: 991px) {\n        width: 80%;\n    }\n`\nStyledModal.displayName = 'StyledModal'\n\nconst now = new Date()\n\nclass MainApp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            endDate: null,\n            startDate: now,\n            startDatePeriod: now,\n            endDatePeriod: null,\n            isPermanent: false,\n            loading: true,\n            selectOptions: [],\n            selectedUser: null,\n            showModal: false,\n            showCalendar: false\n        }\n        this.setDateRange = this.setDateRange.bind(this)\n        this.handleUserChange = this.handleUserChange.bind(this)\n        this.toggleCalendar = this.toggleCalendar.bind(this)\n        this.getPeriodText = this.getPeriodText.bind(this)\n        this.clearDates = this.clearDates.bind(this)\n        this.refContainer = React.createRef()\n    }\n\n     componentDidMount() {\n         this.getEmployees()\n     }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(prevState.selectedUser && this.state.selectedUser &&\n            (prevState.selectedUser.value !== this.state.selectedUser.value)) {\n        }\n    }\n\n    getEmployees = () => {\n        return api.getAllEmployees().then(res => {\n            let users = res.data\n            let selectOptions = users.map(user => {\n                return { value: user._id, label: user.firstname + ' ' + user.surname }\n            })\n            this.setState({\n                users,\n                selectOptions,\n                loading: false\n            })\n        }).catch((err)=>{\n                NotificationManager.error('Error', 'Can not get employees', 5000)\n                this.setState({fatalError: true})\n        })\n    }\n\n    setDateRange (startDatePeriod, endDatePeriod) {\n        this.setState({ startDatePeriod, endDatePeriod })\n    }\n\n    handleUserChange (selectedUser) {\n        this.setState({ selectedUser })\n    }\n\n    toggleCalendar () {\n        this.setState({showCalendar: !this.state.showCalendar})\n    }\n\n    getPeriodText() {\n        const { startDatePeriod, endDatePeriod } = this.state\n        const diffDays = Math.ceil(Math.abs(endDatePeriod - startDatePeriod) / (1000 * 60 * 60 * 24))\n        if (diffDays === 0) {\n            return startDatePeriod.toLocaleDateString()\n        }\n        return(\n               <React.Fragment>\n                    <strong>From: </strong>\n                        {startDatePeriod.toLocaleDateString()}\n                    <strong> - To: </strong>\n                        {endDatePeriod.toLocaleDateString()}\n                </React.Fragment>     \n            )\n    }\n\n    clearDates () {\n        this.setState({ endDatePeriod: null, startDatePeriod: now, isPermanentPeriod: false, modified: false })\n    }\n\n    render() {\n        const {\n            startDatePeriod,\n            endDatePeriod,\n            selectOptions,\n            selectedUser,\n            showCalendar\n        } = this.state;\n        return (\n            <StyledContainer className={'row'}>\n                <NotificationContainer/>\n                <div className={'plans-cls col-lg-8 col-xs-12'}>\n                    <DesktopApp/>\n                </div>\n                <StyledSelectors className={'col-lg-4 col-xs-12'}>\n                    <SelectElement\n                        selectedOption={selectedUser}\n                        selectOptions={selectOptions}\n                        handleUserChange={this.handleUserChange}\n                    />\n                    {(startDatePeriod && endDatePeriod) &&\n                        <div className={'margin-top-20 bg-info text-center hidden-md hidden-sm hidden-xs col-md-12'}>\n                            <h3>Date selected:</h3>\n                            <p>{this.getPeriodText()}</p>\n                            <button className={'btn btn-warning margin-bottom-20'} onClick={this.clearDates}>Clear selection</button>\n                        </div>\n                    }\n                    <h4 className=\"text-info\">Choose a day or a range in the calendar: </h4>\n                    <button onClick={this.toggleCalendar} disabled={selectedUser ? false : true} className={'btn btn-primary'}>Open Calendar</button>\n                </StyledSelectors>\n                <StyledModal\n                    isOpen={showCalendar}\n                    contentLabel=\"Choose a date or range\"\n                    style={{\n                        overlay: {\n                            zIndex: 3\n                        }\n                    }}>\n                    <p className={'text-info'}>\n                        To select a range click on the start day and in the end day you want or\n                        type it in the inputs in the format \"DD.MM.YYYY\".\n                    </p>\n                    <DateRangeSelect setDateRange={this.setDateRange} startDate={startDatePeriod || now} endDate={endDatePeriod || now} />\n                    <br/>\n                    <button onClick={this.toggleCalendar} className={'btn btn-lg btn-danger'}>Close</button>\n                </StyledModal>\n            </StyledContainer>\n        )\n    }\n}\n\nexport default MainApp","export default __webpack_public_path__ + \"static/media/office.cbe5ee73.jpeg\";","import React, { Component } from 'react'\n\nclass MobileApp extends Component {\n    render() {\n        return (\n            <div>\n                <p>In this page you'll see the mobile version</p>\n            </div>\n        )\n    }\n}\n\nexport default MobileApp","import React , { useState } from 'react';\nimport styled from 'styled-components'\nimport office from \"../assets/office.jpeg\";\n\n\nconst StyledImg = styled.div`\n    padding: 20px 40px;\n    display: inline-block;\n    text-align: center;\n    width: 50%;\n    img {\n        max-width: 100%;\n    }\n`;\nStyledImg.displayName = 'StyledImg'\n\nconst StyledClickPointsContainer = styled.div`\n    position: relative;\n    margin: 0 auto;\n`;\nStyledClickPointsContainer.displayName = 'StyledClickPointsContainer'\n\nexport const DesktopApp = (props) => {\n    const [state, setState] = useState(\n        {\n            showGround: true,\n            showFirst: false\n        }\n    )\n\n    const switchFloor = () => {\n        if(state.showGround) {\n            setState({\n                showGround: false,\n                showFirst: true                \n            })\n        } else {\n            setState({\n                showGround: true,\n                showFirst: false           \n            })\n        }\n    }\n\n    return(\n        <StyledClickPointsContainer className={'col-xs-12'}>\n            <div className={'d-xs-block d-sm-block d-md-block d-lg-none'}>\n                <button className='btn btn-info' onClick={switchFloor}>Ground Floor</button>\n                <button className='btn btn-info' onClick={switchFloor}>First Floor</button>\n            </div>\n\n            <div className={'desktop d-none d-lg-block'}>\n                <StyledImg>\n                    <h2>Ground Floor</h2>\n                    <img src={office} alt='Ground Floor' />\n                </StyledImg>\n                <StyledImg>\n                    <h2>First Floor</h2>\n                    <img src={office} alt='First Floor' />\n                </StyledImg>\n            </div>\n\n            <div className={'mobile d-xs-block d-sm-block d-md-block d-lg-none'}>\n                {(state.showGround) &&\n                    <StyledImg>\n                        <h2>Ground Floor</h2>\n                        <img src={office} alt='Ground Floor' />\n                    </StyledImg>\n                }\n                {(state.showFirst) &&\n                    <StyledImg>\n                        <h2>First Floor</h2>\n                        <img src={office} alt='First Floor' />\n                    </StyledImg>\n                }\n            </div>\n\n\n        </StyledClickPointsContainer>\n    )\n}\nexport default DesktopApp\n","import 'jquery/src/jquery';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'react-date-range/dist/styles.css';\nimport 'react-date-range/dist/theme/default.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { MainApp } from '../pages'\n\nconst StyledHeader = styled.div`\n    text-align: center;\n    background-color: #293FCA;\n    color: white;\n    padding: 15px;\n`;\nStyledHeader.displayName = 'StyledHeader'\n\nfunction App() {\n    return (\n        <Router>\n            <StyledHeader>\n                <h2>Welcome to Desk Booking</h2>\n                <p>Please select your name from the list, then choose a date/period and the desk you want booking.</p>\n            </StyledHeader>\n            <Route\n                path=\"/\"\n                exact\n                component={MainApp}\n            />\n        </Router>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}